version: "3.2"
networks:
  app:
    driver: bridge
services:
  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres_password
    networks:
      - app
  api:
    restart: always
    container_name: api
    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./api:/api
    build:
      context: ./api/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PG_USER=postgres
      - PG_HOST=postgres
      - PG_DATABASE=postgres
      - PG_PASSWORD=postgres_password
      - PG_PORT=5432
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - app

  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always
    command: npm start
    container_name: client
    volumes:
      - ./client:/client
    build:
      context: ./client/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - app
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"

volumes:
  node-modules:
  postgres_data:
